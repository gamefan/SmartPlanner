import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'dart:convert';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:smartplanner/core/services/storage_service.dart';

import 'package:smartplanner/models/enum.dart';
import 'package:smartplanner/models/hashtag.dart';

/// HashtagProvider：管理所有 Hashtag 的狀態與邏輯
class HashtagNotifier extends StateNotifier<List<Hashtag>> {
  HashtagNotifier() : super([]);

  final storageService = StorageService();
  // 載入本地儲存資料
  Future<void> loadFromStorage() async {
    state = await storageService.loadHashtags();
  }

  // 儲存資料到本地
  Future<void> saveToStorage() async {
    await storageService.saveHashtags(state);
  }

  /// 新增一個 Hashtag（避免重複名稱）
  void addHashtag(Hashtag tag) {
    if (state.any((h) => h.name == tag.name)) return;
    state = [...state, tag];
    saveToStorage();
  }

  /// 刪除指定 ID 的 Hashtag
  void deleteHashtag(String id) {
    state = state.where((h) => h.id != id).toList();
    saveToStorage();
  }

  /// 批次刪除
  void deleteHashtags(List<String> ids) {
    state = state.where((h) => !ids.contains(h.id)).toList();
    saveToStorage();
  }

  /// 取得某類型的 Hashtag（如動詞、名詞）
  List<Hashtag> getByCategory(HashtagCategory category) {
    return state.where((h) => h.category == category).toList();
  }

  /// 取得 AI 自動產生的 Hashtag
  List<Hashtag> get autoGenerated => state.where((h) => h.source == HashtagSource.aiGenerated).toList();

  /// 取得使用者手動新增的 Hashtag
  List<Hashtag> get manualCreated => state.where((h) => h.source == HashtagSource.manual).toList();
}

/// Provider 實體
final hashtagProvider = StateNotifierProvider<HashtagNotifier, List<Hashtag>>((ref) {
  final notifier = HashtagNotifier();
  notifier.loadFromStorage(); // App 啟動時讀取資料
  return notifier;
});
